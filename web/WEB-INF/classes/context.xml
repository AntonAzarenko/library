<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    ">

    <aop:aspectj-autoproxy />

    <bean id="benchmarkAspect" class="library.aspect.BenchmarkAspect" />

    <context:annotation-config/>
    <context:component-scan base-package="library.service, library.util"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer ">
        <property name="locations" value="classpath:config.properties"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Throwable" />
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="transactionOperation" expression="execution(* library.service..*ServiceImpl.*(..))" />
        <aop:advisor pointcut-ref="transactionOperation" advice-ref="txAdvice" />
    </aop:config>

    <bean class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="dataSource"/>
        <property name="changeLog" value="classpath:/changelog.xml"/>
        <property name="contexts" value="test"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/mybatis.xml"/>
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
    </bean>

    <!--bean id="dao" class="org.springframework.jdbc.core.support.JdbcDaoSupport" abstract="true">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="bookDao" class="library.dao.mem.BookMapDao" /-->

    <!--bean id="mapper" class="org.mybatis.spring.mapper.MapperFactoryBean" abstract="true" >
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="bookDao" parent="mapper">
        <property name="mapperInterface" value="library.dao.BookDao" />
    </bean-->

    <bean id="mapper" class="org.mybatis.spring.support.SqlSessionDaoSupport" abstract="true">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- DAO -->
    <bean id="bookDao" class="library.dao.mapper.BookDaoMapper" parent="mapper"/>

    <bean id="publisherDao" class="library.dao.mapper.PublisherDaoMapper" parent="mapper"/>

    <bean id="authorDao" class="library.dao.mapper.AuthorDaoMapper" parent="mapper"/>

    <bean id="metadataDao" class="library.dao.mapper.MetadataDaoMapper" parent="mapper"/>

    <!-- SERVICE -->
    <bean id="bookService" class="library.service.BookServiceImpl">
        <property name="bookDao" ref="bookDao"/>
    </bean>

    <bean id="publisherService" class="library.service.PublisherServiceImpl">
        <property name="publisherDao" ref="publisherDao"/>
    </bean>

    <bean id="searchService" class="library.service.SearchServiceImpl">
        <property name="dao" ref="bookDao"/>
    </bean>

    <bean id="metadataService" class="library.service.MetadataServiceImpl">
        <property name="metadataDao" ref="metadataDao"/>
    </bean>
    
    <!--<bean id="authorService" class="library.service.AuthorServiceImpl">-->
        <!--<property name="authorDao" ref="authorDao"/>-->
    <!--</bean>-->

</beans>

