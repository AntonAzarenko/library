<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="library.dao.PublisherDao">
    
    <resultMap type="Publisher" id="publishermap">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>
    
    <insert id="insert"
            parameterType="Publisher"
            useGeneratedKeys="true">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT nextVal('publishers_id_seq')
        </selectKey>
        INSERT INTO publishers (id,name) VALUES (#{id},#{name})
    </insert>

    <update id="update"
            parameterType="Publisher">
        UPDATE publishers SET name=#{name} WHERE id = #{id}
    </update>

    <delete id="delete"
            parameterType="Long">
        delete from publishers where id = #{id}
    </delete>
    
    <select id="readAll" resultMap="publishermap">
        SELECT p.id, p.name FROM publishers p
    </select>
    
    <select id="findByName"
            resultMap="publishermap"
            parameterType="String">
        <bind name="pattern" value="'%' + _parameter.toString() + '%'" />
        SELECT p.id, p.name FROM publishers p WHERE LOWER(p.name) LIKE Lower(#{pattern}) LIMIT 1
    </select>
    
    <select id="read" resultMap="publishermap" parameterType="long">
        SELECT p.id, p.name FROM publishers p WHERE p.id = #{id}
    </select>
    
    <select id="findByAuthorId" resultMap="publishermap" parameterType="long">
        SELECT DISTINCT p.id, p.name  from authors_books as ab
        inner join books as b on ab.book_id = b.id
        inner join authors as a on ab.author_id=a.id
        inner join publishers as p on p.id = b.publisher_id
        where a.id=#{id}
    </select>
</mapper>